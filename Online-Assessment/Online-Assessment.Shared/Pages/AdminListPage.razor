@page "/adminListPage"
@using Model
@using Online_Assessment.Shared.Services
@inject NavigationManager NavigationManager
@inject AdminService AdminService

<div class="flex justify-center items-center min-h-screen bg-gray-100 p-6">
    <div class="bg-white shadow-lg rounded-xl p-8 w-full max-w-6xl">
        <h3 class="text-3xl font-bold text-center text-blue-700 mb-6">üë®‚Äçüíª HR Admin List</h3>
        <div class="flex justify-center">
            <div class="overflow-x-auto rounded-lg shadow-md w-full max-w-6xl">
                <div class="mb-4 customDIv">
                    <div class="addBtnClass mb-4">
                        <button class="btn-add" @onclick="ViewUser">‚ûï Add Admin</button>
                    </div>
                    <table class="w-full table-fixed border border-gray-300 text-center">
                        <thead class="bg-blue-600 text-blue-700 text-lg">
                            <tr>
                                <th class="px-6 py-4 border border-gray-300">Email</th>
                                <th class="px-6 py-4 border border-gray-300">User Type</th>
                                <th class="px-6 py-4 border border-gray-300">Technology</th>
                                <th class="px-6 py-4 border border-gray-300">Sub Technology</th>
                                <th class="px-6 py-4 border border-gray-300">Score</th>
                                <th class="px-6 py-4 border border-gray-300">over All Score</th>
                                <th class="px-6 py-4 border border-gray-300">Result</th>
                                <th class="px-6 py-4 border border-gray-300">Comments</th>
                                <th class="px-6 py-4 border border-gray-300">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-300 bg-white text-lg">
                            @if (users.Any())
                            {
                                @foreach (var user in users)
                                {
                                    <tr class="hover:bg-gray-100 transition">
                                        @if (editingUserId == user.Id)
                                        {
                                            <td class="px-6 py-4 border border-gray-300"><input type="text" class="input-field" @bind="selectedUser.Email" readonly /></td>
                                            <td class="px-6 py-4 border border-gray-300">
                                                <select class="input-field" @bind="selectedUser.UserType">
                                                    <option value="Internal">Internal</option>
                                                    <option value="Candidate">Candidate</option>
                                                </select>
                                            </td>
                                            <td class="px-6 py-4 border border-gray-300">
                                                <select class="input-field" @bind="selectedUser.Technology">
                                                <option value=".NET MAUI">.NET MAUI</option>
                                                    <option value="Blazor">Blazor</option>
                                                    <option value="Web Development">Web Development</option>
                                                </select>
                                            </td>
                                            <td class="px-6 py-4 border border-gray-300">
                                                <select class="input-field" @bind="selectedUser.SelectedSubTechnologies">
                                                    <option value="HTML">HTML</option>
                                                    <option value="Csharp">C#</option>
                                                    <option value="SQL">SQL</option>
                                                </select>
                                            </td>
                                            <td class="px-6 py-4 border border-gray-300">
                                            <input type="text" class="input-field" @bind="selectedUser.Score" readonly />
                                            </td>
                                            <td class="px-6 py-4 border border-gray-300">
                                            <input type="text" class="input-field" @bind="selectedUser.OverallScore" readonly />
                                            </td>
                                            <td class="px-6 py-4 border border-gray-300">
                                            <input type="text" class="input-field" @bind="selectedUser.Result" readonly />
                                            </td>
                                            <td class="px-6 py-4 border border-gray-300">
                                            <input type="text" class="input-field" @bind="selectedUser.Comments" readonly />
                                            </td>
                                            <td class="px-6 py-4 border border-gray-300 text-center">
                                                <div class="flex justify-center items-center space-x-2">
                                                    <button class="btn-save" @onclick="SaveUser">‚úî Save</button>
                                                    <button class="btn-cancel" @onclick="CancelEdit">‚úñ Cancel</button>
                                                </div>
                                            </td>
                                        }
                                        else
                                        {
                                            <td class="px-6 py-4 border border-gray-300">@user.Email</td>
                                            <td class="px-6 py-4 border border-gray-300">@user.UserType</td>
                                            <td class="px-6 py-4 border border-gray-300">@user.Technology</td>
                                            <td class="px-6 py-4 border border-gray-300">@user.SelectedSubTechnologies</td>
                                            <td class="px-6 py-4 border border-gray-300">@user.Score</td>
                                            <td class="px-6 py-4 border border-gray-300">@user.OverallScore</td>
                                            <td class="px-6 py-4 border border-gray-300">@user.Result</td>
                                            <td class="px-6 py-4 border border-gray-300">@user.Comments</td>
                                            <td class="px-6 py-4 border border-gray-300 text-center">
                                                <div class="flex justify-center items-center space-x-2">
                                                    @* <button class="btn-edit" @onclick="() => EditUser(user)">‚úè Edit</button>
                                                    <button class="btn-delete" @onclick="() => DeleteUser(user.Id)">üóë Delete</button> *@
                                                    <button class="btn-view" @onclick="() => ViewUser()">üóë View</button>
                                                </div>
                                            </td>
                                        }
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="8" class="px-6 py-6 text-center text-gray-500 border border-gray-300">No users found.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .input-field {
        border: 1px solid #ccc;
        border-radius: 6px;
        padding: 8px;
        width: 100%;
    }
    .btn-edit, .btn-delete, .btn-save, .btn-cancel,.btn-view {
        padding: 8px 12px;
        border-radius: 6px;
        transition: background 0.3s;
        color: white;
    }
    .btn-edit { background-color: #facc15; }
    .btn-edit:hover { background-color: #eab308; }
    .btn-delete { background-color: #ef4444; }
    .btn-delete:hover { background-color: #dc2626; }
    .btn-save { background-color: #22c55e; }
    .btn-save:hover { background-color: #16a34a; }
    .btn-cancel { background-color: #6b7280; }
    .btn-cancel:hover { background-color: #4b5563; }
    .btn-view { background-color: #1751c5; }
    .btn-view:hover { background-color: #1751c5; }
    .btn-add {
        padding: 8px 12px;
        border-radius: 6px;
        transition: background 0.3s;
        color: white;
        background-color: #1751c5;
    }
    .btn-add:hover { background-color: #1751c5; }
    .customDIv
    {
        display: grid;
        margin-left:auto;
        margin-right:auto;
        width:80%;
    }
    .addBtnClass
    {
        justify-content: end;
        display: flex;
    }

</style>


@code {
    private List<AdminModel> users = new();
    private AdminModel selectedUser = new();
    private int? editingUserId = null;

    protected override void OnInitialized()
    {
        users = AdminService.GetUsers();
    }

    private void EditUser(AdminModel user)
    {
        selectedUser = new AdminModel
        {
            Id = user.Id,
            Email = user.Email,
            UserType = user.UserType,
            Technology = user.Technology,
            SelectedSubTechnologies = user.SelectedSubTechnologies,
            Score = user.Score,
            OverallScore = user.OverallScore,
            Result = user.Result,
            Comments = user.Comments
        };
        editingUserId = user.Id;
    }

    private void SaveUser()
    {
        AdminService.UpdateUser(selectedUser);
        users = AdminService.GetUsers();
        editingUserId = null;
    }

    private void CancelEdit()
    {
        editingUserId = null;
    }

    private void DeleteUser(int id)
    {
        AdminService.DeleteUser(id);
        users = AdminService.GetUsers();
    }

    private void ViewUser()
    {
        NavigationManager.NavigateTo("/adminPage");
    }
}
