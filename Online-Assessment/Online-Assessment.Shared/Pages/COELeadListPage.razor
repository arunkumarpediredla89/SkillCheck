@page "/COELeadListPage"
@using Model
@using Online_Assessment.Shared.Services
@using global::Services
@inject NavigationManager NavigationManager
@inject AdminQuestionService AdminQuestionService

<div class="flex justify-center items-center min-h-screen bg-gray-100 p-6">
    <div class="bg-white shadow-lg rounded-xl p-8 w-full max-w-6xl">
        <h3 class="text-3xl font-bold text-center text-blue-700 mb-6">👨‍💻 COE Admin List</h3>
        <div class="flex justify-center">
            <div class="overflow-x-auto rounded-lg shadow-md w-full max-w-6xl">
                <table class="w-full table-fixed border border-gray-300 text-center">
                    <thead class="bg-blue-600 text-blue-700 text-lg">
                        <tr>
                            <th class="px-6 py-4 border border-gray-300">Technology</th>
                            <th class="px-6 py-4 border border-gray-300">Sub-Technologies</th>
                            <th class="px-6 py-4 border border-gray-300">No Of Question</th>
                            <th class="px-6 py-4 border border-gray-300">User Type</th>
                            <th class="px-6 py-4 border border-gray-300">Total No Of Questions</th>
                            <th class="px-6 py-4 border border-gray-300">Total Time</th>
                            <th class="px-6 py-4 border border-gray-300">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-300 bg-white text-lg">
                        @if (Questions.Any())
                        {
                            @foreach (var user in Questions)
                            {
                                <tr class="hover:bg-gray-100 transition">
                                    @if (editingUserId == user.Id)
                                    {   
                                         <td class="px-6 py-4 border border-gray-300">
                                            <select class="input-field" @bind="selectedQuestion.SelectedTechnology">
                                                <option value=".NET MAUI">.NET MAUI</option>
                                                <option value="Blazor">Blazor</option>
                                                <option value="Web Development">Web Development</option>
                                            </select>
                                        </td>
                                        <td class="px-6 py-4 border border-gray-300">
                                            <select class="input-field" @bind="selectedQuestion.SelectedSubTechnologies">
                                                <option value="html">HTML</option>
                                                <option value="Csharp">C#</option>
                                                <option value="SQL">SQL</option>
                                            </select>
                                        </td>
                                        <td class="px-6 py-4 border border-gray-300">
                                           <input type="text" class="input-field" @bind="selectedQuestion.NoOfQuestions" readonly />
                                        </td>
                                        <td class="px-6 py-4 border border-gray-300">
                                            <select class="input-field" @bind="selectedQuestion.UserTypes">
                                                <option value="Internal">Internal</option>
                                                <option value="Candidate">Candidate</option>
                                            </select>
                                        </td>
                                        <td class="px-6 py-4 border border-gray-300">
                                           <input type="text" class="input-field" @bind="selectedQuestion.TotalQuestions" readonly />
                                        </td>
                                        <td class="px-6 py-4 border border-gray-300">
                                            <input type="text" class="input-field" @bind="selectedQuestion.TimeLimit" readonly />
                                        </td>
                                        <td class="px-6 py-4 border border-gray-300 text-center">
                                            <div class="flex justify-center items-center space-x-2">
                                                <button class="btn-save" @onclick="SaveUser">✔ Save</button>
                                                <button class="btn-cancel" @onclick="CancelEdit">✖ Cancel</button>
                                            </div>
                                        </td>
                                    }
                                    else
                                    {
                                        <td class="px-6 py-4 border border-gray-300">@user.SelectedTechnology</td>
                                        <td class="px-6 py-4 border border-gray-300">@user.SelectedSubTechnologies</td>
                                        <td class="px-6 py-4 border border-gray-300">@user.NoOfQuestions</td>
                                        <td class="px-6 py-4 border border-gray-300">@user.UserTypes</td>
                                        <td class="px-6 py-4 border border-gray-300">@user.TotalQuestions</td>
                                        <td class="px-6 py-4 border border-gray-300">@user.TimeLimit</td>
                                        <td class="px-6 py-4 border border-gray-300 text-center">
                                            <div class="flex justify-center items-center space-x-2">
                                                <button class="btn-edit" @onclick="() => EditUser(user)">✏ Edit</button>
                                                <button class="btn-delete" @onclick="() => DeleteUser(user.Id)">🗑 Delete</button>
                                                 <button class="btn-view" @onclick="() => View()">View</button>
                                            </div>
                                        </td>
                                    }
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="8" class="px-6 py-6 text-center text-gray-500 border border-gray-300">No users found.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>



@code {
    private List<AdminQuestionModel> Questions = new();
    private AdminQuestionModel selectedQuestion = new();
    private int? editingUserId = null;

    protected override void OnInitialized()
    {
        Questions = AdminQuestionService.GetQuestions();
    }

    private void EditUser(AdminQuestionModel model)
    {
        selectedQuestion = new AdminQuestionModel
        {
          UserTypes = model.UserTypes,
          Username = model.Username,
          SelectedTechnology = model.SelectedTechnology,
          SelectedSubTechnologies = model.SelectedSubTechnologies,
          QuestionDistribution = model.QuestionDistribution,
          TotalQuestions = model.TotalQuestions,
            DifficultyLevel = model.DifficultyLevel,
            TimeLimit = model.TimeLimit,
            NoOfQuestions = model.NoOfQuestions
        };
        editingUserId = model.Id;
    }

    private void SaveUser()
    {
        AdminQuestionService.UpdateQuestion(selectedQuestion);
        Questions = AdminQuestionService.GetQuestions();
        editingUserId = null;
    }

    private void CancelEdit()
    {
        editingUserId = null;
    }

    private void DeleteUser(int id)
    {
        AdminQuestionService.DeleteQuestion(id);
        Questions = AdminQuestionService.GetQuestions();
    }

    private void View()
    {
        NavigationManager.NavigateTo("/COELeads");
    }
}


<style>
    .input-field {
        border: 1px solid #ccc;
        border-radius: 6px;
        padding: 8px;
        width: 100%;
    }
    table {
        margin: auto;
    }
    .btn-edit, .btn-delete, .btn-save, .btn-cancel,.btn-view {
        padding: 8px 12px;
        border-radius: 6px;
        transition: background 0.3s;
        color: white;
    }
    .btn-edit { background-color: #facc15; }
    .btn-edit:hover { background-color: #eab308; }
    .btn-delete { background-color: #ef4444; }
    .btn-delete:hover { background-color: #dc2626; }
    .btn-save { background-color: #22c55e; }
    .btn-save:hover { background-color: #16a34a; }
    .btn-cancel { background-color: #6b7280; }
    .btn-cancel:hover { background-color: #4b5563; }
    .btn-view { background-color: #3b82f6; }
    .btn-view:hover { background-color: #2563eb; }
</style>
